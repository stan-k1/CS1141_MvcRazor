// <auto-generated />
using Chocobits.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Chocobits.Migrations
{
    [DbContext(typeof(ChocoContext))]
    [Migration("20210802123313_seedcatfix")]
    partial class seedcatfix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Chocobits.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BannerLoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BannerLoc = "category_chocolates.jpg",
                            Description = "Premium Chocolate Bars, Chocolate Boxes and Pralines. Premium dark, milk and white chocolate. Gift boxes available.",
                            Name = "Chocolates and Pralines"
                        },
                        new
                        {
                            Id = 2,
                            BannerLoc = "category_pies.jpg",
                            Description = "Cakes, Tarts and Pies. High quality premium chocolate based deserts available in a handpicked collection of various flavors and fillings.",
                            Name = "Pies"
                        },
                        new
                        {
                            Id = 3,
                            BannerLoc = "category_icecream.jpg",
                            Description = "Chocolate Ice Cream and Ice Creamsicles. High quality fresh ice cream based on our premium chocolate products.",
                            Name = "Ice Cream"
                        });
                });

            modelBuilder.Entity("Chocobits.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageLoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(8)
                        .HasColumnType("decimal(8)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "High Quality Milk Chocolate Bar 30% Cocoa 200g",
                            ImageLoc = "product_milkbar.jpg",
                            Name = "Milk Chocolate Bar",
                            Price = 4.35m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Premium Cocoa Butter White Chocolate Bar 210g",
                            ImageLoc = "product_whitechocolate.jpg",
                            Name = "White Chocolate Bar",
                            Price = 5.20m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "6 60g Chocolate Ice Creamsicles with praline filling",
                            ImageLoc = "product_creamsicles.jpg",
                            Name = "Chocolate Ice Creamsicles",
                            Price = 5.20m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "Chocolate Cake with Raspberry Flavoring, 650g",
                            ImageLoc = "product_cake.jpg",
                            Name = "Chocolate and Raspberry Cake",
                            Price = 35.25m
                        });
                });

            modelBuilder.Entity("Chocobits.Domain.Product", b =>
                {
                    b.HasOne("Chocobits.Domain.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Chocobits.Domain.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
